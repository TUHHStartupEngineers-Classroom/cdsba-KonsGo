---
title: "Matching and Subclassification"
---

This section will explore the concepts of matching and subclassification.
For this the following data of *membership.rds* is used:
````{r}
#| echo: false

df <- readRDS('~/GitHub/cdsba-KonsGo/Causal_Data_Science_Data/membership.rds')
df
````

# Draw *DAG* as one understands the relationships

````{r}
#| echo: false
library(dagitty)
library(ggdag)
library(ggplot2)
library(MatchIt)
library(tidyverse)

# load data


dag_model <- 'dag {
bb="0,0,1,1"
membership [exposure,pos="0.075,0.4"]
avg_purchase [outcome,pos="0.4,0.4"]
sex [pos="0.3,0.6"]
age [pos="0.3,0.7"]
prev_avg_purchase [pos="0.2,0.65"]
membership -> avg_purchase
prev_avg_purchase -> avg_purchase
prev_avg_purchase -> membership
sex -> prev_avg_purchase
age -> prev_avg_purchase
sex -> avg_purchase
age -> avg_purchase
}
'

# draw DAG
ggdag_status(dag_model) +
  guides(fill = "none", color = "none")+
  theme_dag()+
  geom_dag_text(color = "black")

````

One can assume that age and sex don't have an influence on the membership, but 
have an influence on the avg_purchase and previous average purchase, as
the previous purchase has an influence on the current purchase.
Furthermore the previous average purchase is the only variable, which should
have an influence on the membership, as people are more likely to sign the 
membership if they are invested in the online shop.

# Naive estimate of the average treatment effect

````{r}
#| echo: false
summary(lm(avg_purch ~ card, df))
````

If one computes the naive estimate of the average treatment effect
one gets an value of 25.2195. However one can suspect that this value is not correct
as it was assumed that the average purchase is not only on the membership dependent.

# Different matching methods to obtain more precise estimates

## (Coarsened) Exact Matching
````{r}
#| echo: false

cem <- matchit(card ~ sex+ age + pre_avg_purch,
               data = df, 
               method = 'cem', 
               estimand = 'ATE')

summary(cem)

df_cem <- match.data(cem)

model_cem <- lm(avg_purch ~ card, data = df_cem, weights = weights)
summary(model_cem)
````

It can  be seen that the ATE is around 10 smaller, than the naive estimate.

## Nearest-Neighbor Matching

````{r}
#| echo: false

nn <- matchit(card ~ sex+ age + pre_avg_purch,
               data = df, 
               method = 'nearest', 
               distance = 'mahalanobis',
               replace = T)
summary(nn)

df_nn <- match.data(nn)

model_nn <- lm(avg_purch ~ card, data = df_nn, weights = weights)
summary(model_nn)
````

The ATE is very similar to the one obtained by CEM.
This means both methods are valid

## Inverse Probability Weighting

````{r}
#| echo: false

# (1) Propensity scores
model_prop <- glm(card ~ sex + age + pre_avg_purch,
                  data = df,
                  family = binomial(link = "logit"))
summary(model_prop)

# Add propensities to table
df_aug <- df %>% mutate(propensity = predict(model_prop, type = "response"))

# Extend data by IPW scores
df_ipw <- df_aug %>% mutate(
  ipw = (card/propensity) + ((1-card) / (1-propensity)))

# Look at data with IPW scores
df_ipw %>% 
  select(card, age, sex, pre_avg_purch, propensity, ipw)

model_ipw <- lm(avg_purch ~ card,
                data = df_ipw,
                weights = ipw)
summary(model_ipw)

# The estimated value is 14.9573, which fits with the other two models

# Looking for observations with high weights
df_ipw %>% 
  select(card, age, sex, pre_avg_purch, propensity, ipw) %>% 
  arrange(desc(ipw))

# Filter out extreme weights
model_ipw_trim <- lm(avg_purch ~ card,
                     data = df_ipw %>% filter(propensity %>% between(0.15, 0.85)),
                     weights = ipw)
summary(model_ipw_trim)
````

The trim did not change anything as there are no extreme weights in our dataset